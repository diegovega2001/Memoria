# Configuración de Fine-Tuning para ResNet50 - CLASIFICACIÓN
# Este archivo está optimizado para clasificación tradicional con CrossEntropy

# ===== DATASET =====
views: ['front']
class_granularity: 'model'
min_train_images: 4
min_val_images: 5
min_test_images: 5
seed: 3

# Zero-shot testing
enable_zero_shot: True
num_zero_shot_classes: 100

# ===== TRANSFORMACIONES =====
image_size: [224, 224]
grayscale: true
use_bbox: true
augment: true

# ===== MODELO =====
model_type: 'vision'
model_name: 'resnet50'
weights: 'IMAGENET1K_V1'
objective: 'classification' 

# ===== TRAINING =====
batch_size: 256 
num_workers: 2
pin_memory: true
device: 'cuda'

# Fine-tuning
finetune_epochs: 50
finetune_criterion: 'CrossEntropyLoss'
finetune_optimizer_type: 'AdamW'
finetune_backbone_lr: 1.0e-5 
finetune_head_lr: 1.0e-3
finetune_optimizer_weight_decay: 1.0e-2  

# Scheduler
use_scheduler: true
scheduler_type: 'cosine_warmup'
warmup_epochs: 5

# Early stopping
use_early_stopping: true
patience: 5

# Gradient clipping
gradient_clip_value: 1.0

# Mixed precision training
use_amp: true
